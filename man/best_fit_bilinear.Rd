% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utility_functions.R
\name{best_fit_bilinear}
\alias{best_fit_bilinear}
\title{Fits bilinear model to set of x,y points.}
\usage{
best_fit_bilinear(x.vec, y.vec, truncate.left = 0, truncate.right = 0)
}
\arguments{
\item{x.vec}{numeric vector of x coordinates}

\item{y.vec}{numeric vector of y coordinates, must be the same length as x}

\item{truncate.left}{positive integer - number of points to exclude from left hand side}

\item{truncate.right}{positive integer - number of points to exclude from right hand side}
}
\value{
list with two componenets: numeric 2 by 2 matrix of coefficients, where row indicate model (left or right) and columns are intercept and slope; numeric vector intersection.x with: x coordinate of first point in left model closest to y (from right hand side), x coordinate of intersection point between left and right models and x coordinate of first point in right model closest to y (from left hand side); these points may be used as cutoff
}
\description{
Fits bilinear model to set of x,y points.
}
\examples{
# fix parameters of left linear model
a.left <- 0
b.left <- 0.8
# fix parameters of right linear model
a.right <- 15
b.right <- 0.1
# make models
x.left <- 1:20
y.left <- a.left + b.left * x.left
x.right <- 25:45
y.right <- a.right + b.right * x.right
# add some noise
y.left <- y.left + rnorm(length(y.left))
y.right <- y.right + rnorm(length(y.right))
# get y vector
x <- c(x.left, x.right)
y <- c(y.left, y.right)
# find best fit bilinear model
bf.model <- best_fit_bilinear(x, y)
print(bf.model[["coefficients"]])
print(bf.model[["intersection.x"]])
# plot results: points
plot(x, y, cex = 0.1)
# plot left model
abline(a = a.left, b = b.left, col = "blue")
# plot right model
abline(a = a.right, b = b.right, col = "green")
# plot left model fit
abline(a = bf.model[["coefficients"]]["left","intercept"], b = bf.model[["coefficients"]]["left","slope"], col = "blue", lty = 2)
# plot left model fit
abline(a = bf.model[["coefficients"]]["right","intercept"], b = bf.model[["coefficients"]]["right","slope"], col = "green", lty = 2)

}
\seealso{
The code was taken from \url{https://stackoverflow.com/questions/15874214/piecewise-function-fitting-with-nls-in-r} (with minor modifications).
}
